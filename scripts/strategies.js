import { HTML, Input, MultiSelect, SingleSelect } from "./handlers.js";
import { qs } from "./qs.js";

export class StrategyBuilder {
  constructor(eventManager) {
    this.eventManager = eventManager;
  }
  renderTitle(text) {
    return `${text ? '<div class="step__title">' + text + "</div>" : ""}`;
  }
  renderSubtitle(description) {
    return `${
      description
        ? '<div class="step__description">' + description + "</div>"
        : ""
    }`;
  }
}

export class SingleStrategy extends StrategyBuilder {
  constructor(eventManager) {
    super(eventManager);
    this.name = "single";
  }
  renderVariants(variantsToJson) {
    return variantsToJson
      .map((variant) => {
        return `
            <button
                class="button select single"
                id="variant-${variant.id}"
                data-id=${variant.id}
            >
            ${
              variant.image
                ? '<div class="button__wrapper"><img class="button__img" src=' +
                  variant.image +
                  "/></div>"
                : ""
            }
            <span>${variant.title}</span>
            </button>
            `;
      })
      .join("");
  }
  render(data) {
    const context = document.querySelector(".step");
    const { question_text, variants, description } = data;
    const variantsToJson = JSON.parse(variants);

    context.innerHTML = `
        ${this.renderTitle(question_text)}
        ${this.renderSubtitle(description)}
        <div class="actions actions--vertical">
            ${this.renderVariants(variantsToJson)}
        </div>
    `;

    this.eventManager.initListeners();
  }
}

export class MultiStrategy extends StrategyBuilder {
  constructor(eventManager) {
    super(eventManager);
    this.name = "multi";
  }
  renderVariants(variantsToJson) {
    return variantsToJson
      .map((variant) => {
        return `
          <button
              class="button select multi ${variant.image ? "imaged" : ""}"
              id="variant-${variant.id}"
              data-id=${variant.id}
          >
          ${
            variant.image
              ? '<div class="button__wrapper"><img class="button__img" src=' +
                variant.image +
                "/></div>"
              : ""
          }
          <span>${variant.title}</span>
          </button>
          `;
      })
      .join("");
  }
  render(data) {
    const context = document.querySelector(".step");
    const { question_text, variants, description } = data;
    const variantsToJson = JSON.parse(variants);

    context.innerHTML = `
        ${this.renderTitle(question_text)}
        ${this.renderSubtitle(description)}
        <div class="actions actions--vertical">
            ${this.renderVariants(variantsToJson)}
        </div>
    `;

    this.eventManager.initListeners();
  }
}

export class HTMLStrategy {
  constructor(eventManager) {
    this.name = "html";
    this.eventManager = eventManager;
  }
  render(data, context) {
    const renderContext = document.querySelector(".step");
    const { variants } = data;

    const contentToJson = decodeURIComponent(JSON.parse(variants).content);
    renderContext.innerHTML = `<div class="html">${contentToJson}</div>`;
    this.eventManager.initListeners(context);
  }
}

export class FinalScreenStrategy {
  constructor() {
    this.name = "final-screen";
  }

  renderVariants(reviews) {
    return reviews.map(
      (review) =>
        `<div class="review">
      <div class="review__image-wrapper">
        <img
        class="review__image"
        src=${review.image}
      />
      </div>
      
      <div class="review__wrapper">
        <div class="review__content">
          <div class="review__title">${review.name}</div>
          <div class="review__rating">
            <div class="review__rating-item">★</div>
            <div class="review__rating-item">★</div>
            <div class="review__rating-item">★</div>
            <div class="review__rating-item">★</div>
            <div class="review__rating-item">★</div>
          </div>
        </div>
        <div class="review__desc">
          ${review.content}
        </div>
      </div>
    </div>
    `
    ).join('');
  }
  render(data, context) {
    console.log("render");
    const renderContext = document.querySelector(".step");
    const { variants } = data;
    const variantsToJson = JSON.parse(variants);
    const reviews = variantsToJson.reviews;
    const upperContent = decodeURIComponent(variantsToJson.upperContent);
    context.qs.hideProgress();
    context.hideFooter();
    renderContext.innerHTML = `
<div class="html html--final">
  <section>
    <div>${upperContent}</div>
    <div class="graph">
    <svg width="355" height="208" viewBox="0 0 355 208" fill="none" xmlns="http://www.w3.org/2000/svg">
    <mask id="path-1-inside-1_2184_2168" fill="white">
    <path d="M6 0H91.75V181H6V0Z"/>
    </mask>
    <path d="M5.5 0V3.48077H6.5V0H5.5ZM5.5 10.4423V17.4038H6.5V10.4423H5.5ZM5.5 24.3654V31.3269H6.5V24.3654H5.5ZM5.5 38.2885V45.25H6.5V38.2885H5.5ZM5.5 52.2115V59.1731H6.5V52.2115H5.5ZM5.5 66.1346V73.0962H6.5V66.1346H5.5ZM5.5 80.0577V87.0192H6.5V80.0577H5.5ZM5.5 93.9808V100.942H6.5V93.9808H5.5ZM5.5 107.904V114.865H6.5V107.904H5.5ZM5.5 121.827V128.788H6.5V121.827H5.5ZM5.5 135.75V142.712H6.5V135.75H5.5ZM5.5 149.673V156.635H6.5V149.673H5.5ZM5.5 163.596V170.558H6.5V163.596H5.5ZM5.5 177.519V181H6.5V177.519H5.5ZM92.25 181V177.519H91.25V181H92.25ZM92.25 170.558V163.596H91.25V170.558H92.25ZM92.25 156.635V149.673H91.25V156.635H92.25ZM92.25 142.712V135.75H91.25V142.712H92.25ZM92.25 128.788V121.827H91.25V128.788H92.25ZM92.25 114.865V107.904H91.25V114.865H92.25ZM92.25 100.942V93.9808H91.25V100.942H92.25ZM92.25 87.0192V80.0577H91.25V87.0192H92.25ZM92.25 73.0961V66.1346H91.25V73.0961H92.25ZM92.25 59.1731V52.2115H91.25V59.1731H92.25ZM92.25 45.25V38.2885H91.25V45.25H92.25ZM92.25 31.3269V24.3654H91.25V31.3269H92.25ZM92.25 17.4039V10.4423H91.25V17.4039H92.25ZM92.25 3.48079V0H91.25V3.48079H92.25ZM5 0V3.48077H7V0H5ZM5 10.4423V17.4038H7V10.4423H5ZM5 24.3654V31.3269H7V24.3654H5ZM5 38.2885V45.25H7V38.2885H5ZM5 52.2115V59.1731H7V52.2115H5ZM5 66.1346V73.0962H7V66.1346H5ZM5 80.0577V87.0192H7V80.0577H5ZM5 93.9808V100.942H7V93.9808H5ZM5 107.904V114.865H7V107.904H5ZM5 121.827V128.788H7V121.827H5ZM5 135.75V142.712H7V135.75H5ZM5 149.673V156.635H7V149.673H5ZM5 163.596V170.558H7V163.596H5ZM5 177.519V181H7V177.519H5ZM92.75 181V177.519H90.75V181H92.75ZM92.75 170.558V163.596H90.75V170.558H92.75ZM92.75 156.635V149.673H90.75V156.635H92.75ZM92.75 142.712V135.75H90.75V142.712H92.75ZM92.75 128.788V121.827H90.75V128.788H92.75ZM92.75 114.865V107.904H90.75V114.865H92.75ZM92.75 100.942V93.9808H90.75V100.942H92.75ZM92.75 87.0192V80.0577H90.75V87.0192H92.75ZM92.75 73.0961V66.1346H90.75V73.0961H92.75ZM92.75 59.1731V52.2115H90.75V59.1731H92.75ZM92.75 45.25V38.2885H90.75V45.25H92.75ZM92.75 31.3269V24.3654H90.75V31.3269H92.75ZM92.75 17.4039V10.4423H90.75V17.4039H92.75ZM92.75 3.48079V0H90.75V3.48079H92.75Z" fill="#DFE2EC" mask="url(#path-1-inside-1_2184_2168)"/>
    <mask id="path-3-inside-2_2184_2168" fill="white">
    <path d="M91.75 0H177.5V181H91.75V0Z"/>
    </mask>
    <path d="M178 181V177.519H177V181H178ZM178 170.558V163.596H177V170.558H178ZM178 156.635V149.673H177V156.635H178ZM178 142.712V135.75H177V142.712H178ZM178 128.788V121.827H177V128.788H178ZM178 114.865V107.904H177V114.865H178ZM178 100.942V93.9808H177V100.942H178ZM178 87.0192V80.0577H177V87.0192H178ZM178 73.0961V66.1346H177V73.0961H178ZM178 59.1731V52.2115H177V59.1731H178ZM178 45.25V38.2885H177V45.25H178ZM178 31.3269V24.3654H177V31.3269H178ZM178 17.4039V10.4423H177V17.4039H178ZM178 3.48079V0H177V3.48079H178ZM178.5 181V177.519H176.5V181H178.5ZM178.5 170.558V163.596H176.5V170.558H178.5ZM178.5 156.635V149.673H176.5V156.635H178.5ZM178.5 142.712V135.75H176.5V142.712H178.5ZM178.5 128.788V121.827H176.5V128.788H178.5ZM178.5 114.865V107.904H176.5V114.865H178.5ZM178.5 100.942V93.9808H176.5V100.942H178.5ZM178.5 87.0192V80.0577H176.5V87.0192H178.5ZM178.5 73.0961V66.1346H176.5V73.0961H178.5ZM178.5 59.1731V52.2115H176.5V59.1731H178.5ZM178.5 45.25V38.2885H176.5V45.25H178.5ZM178.5 31.3269V24.3654H176.5V31.3269H178.5ZM178.5 17.4039V10.4423H176.5V17.4039H178.5ZM178.5 3.48079V0H176.5V3.48079H178.5Z" fill="#DFE2EC" mask="url(#path-3-inside-2_2184_2168)"/>
    <mask id="path-5-inside-3_2184_2168" fill="white">
    <path d="M177.5 0H263.25V181H177.5V0Z"/>
    </mask>
    <path d="M263.75 181V177.519H262.75V181H263.75ZM263.75 170.558V163.596H262.75V170.558H263.75ZM263.75 156.635V149.673H262.75V156.635H263.75ZM263.75 142.712V135.75H262.75V142.712H263.75ZM263.75 128.788V121.827H262.75V128.788H263.75ZM263.75 114.865V107.904H262.75V114.865H263.75ZM263.75 100.942V93.9808H262.75V100.942H263.75ZM263.75 87.0192V80.0577H262.75V87.0192H263.75ZM263.75 73.0961V66.1346H262.75V73.0961H263.75ZM263.75 59.1731V52.2115H262.75V59.1731H263.75ZM263.75 45.25V38.2885H262.75V45.25H263.75ZM263.75 31.3269V24.3654H262.75V31.3269H263.75ZM263.75 17.4039V10.4423H262.75V17.4039H263.75ZM263.75 3.48079V0H262.75V3.48079H263.75ZM264.25 181V177.519H262.25V181H264.25ZM264.25 170.558V163.596H262.25V170.558H264.25ZM264.25 156.635V149.673H262.25V156.635H264.25ZM264.25 142.712V135.75H262.25V142.712H264.25ZM264.25 128.788V121.827H262.25V128.788H264.25ZM264.25 114.865V107.904H262.25V114.865H264.25ZM264.25 100.942V93.9808H262.25V100.942H264.25ZM264.25 87.0192V80.0577H262.25V87.0192H264.25ZM264.25 73.0961V66.1346H262.25V73.0961H264.25ZM264.25 59.1731V52.2115H262.25V59.1731H264.25ZM264.25 45.25V38.2885H262.25V45.25H264.25ZM264.25 31.3269V24.3654H262.25V31.3269H264.25ZM264.25 17.4039V10.4423H262.25V17.4039H264.25ZM264.25 3.48079V0H262.25V3.48079H264.25Z" fill="#DFE2EC" mask="url(#path-5-inside-3_2184_2168)"/>
    <mask id="path-7-inside-4_2184_2168" fill="white">
    <path d="M263.25 0H349V181H263.25V0Z"/>
    </mask>
    <path d="M349.5 181V177.519H348.5V181H349.5ZM349.5 170.558V163.596H348.5V170.558H349.5ZM349.5 156.635V149.673H348.5V156.635H349.5ZM349.5 142.712V135.75H348.5V142.712H349.5ZM349.5 128.788V121.827H348.5V128.788H349.5ZM349.5 114.865V107.904H348.5V114.865H349.5ZM349.5 100.942V93.9808H348.5V100.942H349.5ZM349.5 87.0192V80.0577H348.5V87.0192H349.5ZM349.5 73.0961V66.1346H348.5V73.0961H349.5ZM349.5 59.1731V52.2115H348.5V59.1731H349.5ZM349.5 45.25V38.2885H348.5V45.25H349.5ZM349.5 31.3269V24.3654H348.5V31.3269H349.5ZM349.5 17.4039V10.4423H348.5V17.4039H349.5ZM349.5 3.48079V0H348.5V3.48079H349.5ZM350 181V177.519H348V181H350ZM350 170.558V163.596H348V170.558H350ZM350 156.635V149.673H348V156.635H350ZM350 142.712V135.75H348V142.712H350ZM350 128.788V121.827H348V128.788H350ZM350 114.865V107.904H348V114.865H350ZM350 100.942V93.9808H348V100.942H350ZM350 87.0192V80.0577H348V87.0192H350ZM350 73.0961V66.1346H348V73.0961H350ZM350 59.1731V52.2115H348V59.1731H350ZM350 45.25V38.2885H348V45.25H350ZM350 31.3269V24.3654H348V31.3269H350ZM350 17.4039V10.4423H348V17.4039H350ZM350 3.48079V0H348V3.48079H350Z" fill="#DFE2EC" mask="url(#path-7-inside-4_2184_2168)"/>
    <path d="M0.666667 169C0.666667 171.946 3.05448 174.333 6 174.333C8.94552 174.333 11.3333 171.946 11.3333 169C11.3333 166.054 8.94552 163.667 6 163.667C3.05448 163.667 0.666667 166.054 0.666667 169ZM177 134.5L177.621 135.283L177.621 135.283L177 134.5ZM343.667 42C343.667 44.9455 346.054 47.3333 349 47.3333C351.946 47.3333 354.333 44.9455 354.333 42C354.333 39.0545 351.946 36.6667 349 36.6667C346.054 36.6667 343.667 39.0545 343.667 42ZM5.89875 169.995C24.8036 171.919 56.0345 172.494 88.3634 167.978C120.669 163.465 154.213 153.848 177.621 135.283L176.379 133.717C153.387 151.952 120.265 161.502 88.0866 165.997C55.9322 170.489 24.8631 169.915 6.10125 168.005L5.89875 169.995ZM177.621 135.283C192.186 123.733 203.041 112.247 212.908 101.529C222.786 90.7968 231.636 80.8779 242.252 72.3418C263.401 55.3359 291.66 43.748 349.013 42.9999L348.987 41.0001C291.34 41.752 262.599 53.4141 240.998 70.7832C230.239 79.4346 221.276 89.4845 211.436 100.174C201.584 110.878 190.814 122.267 176.379 133.717L177.621 135.283Z" fill="#2A7FFF"/>
    <path d="M14.7297 161.139C14.0734 161.139 13.4884 161.027 12.9747 160.801C12.4643 160.576 12.0583 160.263 11.7567 159.862C11.4584 159.457 11.296 158.988 11.2694 158.455H12.5223C12.5488 158.783 12.6615 159.066 12.8604 159.305C13.0592 159.54 13.3194 159.722 13.6409 159.852C13.9624 159.981 14.3187 160.045 14.7098 160.045C15.1473 160.045 15.5351 159.969 15.8731 159.817C16.2112 159.664 16.4764 159.452 16.6686 159.18C16.8608 158.909 16.9569 158.594 16.9569 158.236C16.9569 157.861 16.8641 157.531 16.6785 157.246C16.4929 156.958 16.2211 156.733 15.8632 156.57C15.5052 156.408 15.0677 156.327 14.5507 156.327H13.7354V155.233H14.5507C14.955 155.233 15.3097 155.16 15.6146 155.014C15.9229 154.868 16.1631 154.663 16.3355 154.398C16.5112 154.133 16.599 153.821 16.599 153.463C16.599 153.118 16.5228 152.818 16.3703 152.563C16.2178 152.308 16.0024 152.109 15.724 151.967C15.4489 151.824 15.1241 151.753 14.7496 151.753C14.3982 151.753 14.0668 151.817 13.7552 151.947C13.447 152.073 13.1951 152.257 12.9996 152.499C12.804 152.737 12.6979 153.026 12.6814 153.364H11.4882C11.5081 152.83 11.6688 152.363 11.9704 151.962C12.272 151.557 12.6665 151.242 13.1537 151.017C13.6442 150.792 14.1828 150.679 14.7694 150.679C15.3992 150.679 15.9394 150.807 16.3902 151.062C16.8409 151.314 17.1873 151.647 17.4292 152.061C17.6712 152.475 17.7922 152.923 17.7922 153.403C17.7922 153.977 17.6414 154.466 17.3398 154.87C17.0415 155.274 16.6354 155.554 16.1217 155.71V155.79C16.7647 155.896 17.2668 156.169 17.6281 156.61C17.9894 157.048 18.17 157.589 18.17 158.236C18.17 158.789 18.0192 159.286 17.7176 159.727C17.4193 160.165 17.0116 160.509 16.4946 160.761C15.9775 161.013 15.3892 161.139 14.7297 161.139ZM21.317 158.216L21.2971 156.764H21.5358L24.8767 153.364H26.3284L22.7687 156.963H22.6693L21.317 158.216ZM20.2233 161V150.818H21.3966V161H20.2233ZM25.0756 161L22.0926 157.222L22.9278 156.406L26.567 161H25.0756Z" fill="#686D88"/>
    <path d="M321.533 21.3636V33H319.425V23.4148H319.357L316.635 25.1534V23.2216L319.527 21.3636H321.533ZM328.788 33.2216C327.853 33.2216 327.05 32.9848 326.379 32.5114C325.713 32.0341 325.199 31.3466 324.839 30.4489C324.483 29.5473 324.305 28.4621 324.305 27.1932C324.309 25.9242 324.489 24.8447 324.845 23.9545C325.205 23.0606 325.718 22.3788 326.385 21.9091C327.055 21.4394 327.857 21.2045 328.788 21.2045C329.72 21.2045 330.521 21.4394 331.192 21.9091C331.862 22.3788 332.375 23.0606 332.732 23.9545C333.091 24.8485 333.271 25.928 333.271 27.1932C333.271 28.4659 333.091 29.553 332.732 30.4545C332.375 31.3523 331.862 32.0379 331.192 32.5114C330.525 32.9848 329.724 33.2216 328.788 33.2216ZM328.788 31.4432C329.516 31.4432 330.089 31.0852 330.51 30.3693C330.934 29.6496 331.146 28.5909 331.146 27.1932C331.146 26.2689 331.05 25.4924 330.857 24.8636C330.663 24.2348 330.391 23.7614 330.038 23.4432C329.686 23.1212 329.269 22.9602 328.788 22.9602C328.065 22.9602 327.493 23.3201 327.072 24.0398C326.652 24.7557 326.44 25.8068 326.436 27.1932C326.432 28.1212 326.525 28.9015 326.714 29.5341C326.908 30.1667 327.18 30.6439 327.533 30.9659C327.885 31.2841 328.304 31.4432 328.788 31.4432ZM337.057 30.2614L337.051 27.7784H337.381L340.517 24.2727H342.92L339.062 28.5682H338.636L337.057 30.2614ZM335.182 33V21.3636H337.239V33H335.182ZM340.659 33L337.818 29.0284L339.205 27.5795L343.119 33H340.659Z" fill="#2A7FFF"/>
    <path d="M177.501 133.832C130.965 170.763 43.7771 172.347 6 168.5V181H349V41C233.663 42.5054 235.672 87.6667 177.501 133.832Z" fill="url(#paint0_linear_2184_2168)" fill-opacity="0.6"/>
    <path d="M7.46413 204V203.105L10.8249 199.426C11.2193 198.995 11.5442 198.621 11.7994 198.303C12.0546 197.981 12.2435 197.679 12.3661 197.398C12.4921 197.113 12.555 196.814 12.555 196.503C12.555 196.145 12.4689 195.835 12.2965 195.573C12.1275 195.311 11.8955 195.109 11.6005 194.967C11.3055 194.824 10.9741 194.753 10.6062 194.753C10.2151 194.753 9.8737 194.834 9.58203 194.996C9.29368 195.156 9.06996 195.379 8.91087 195.668C8.75509 195.956 8.6772 196.294 8.6772 196.682H7.50391C7.50391 196.085 7.64145 195.562 7.91655 195.111C8.19164 194.66 8.56617 194.309 9.04013 194.057C9.5174 193.805 10.0527 193.679 10.646 193.679C11.2425 193.679 11.7712 193.805 12.2319 194.057C12.6926 194.309 13.0539 194.648 13.3157 195.076C13.5775 195.504 13.7085 195.979 13.7085 196.503C13.7085 196.877 13.6405 197.244 13.5046 197.602C13.372 197.956 13.14 198.352 12.8086 198.79C12.4805 199.224 12.0247 199.754 11.4414 200.381L9.15447 202.827V202.906H13.8874V204H7.46413ZM19.2617 204.139C18.5127 204.139 17.8746 203.935 17.3477 203.528C16.8207 203.117 16.418 202.522 16.1396 201.743C15.8612 200.961 15.7219 200.016 15.7219 198.909C15.7219 197.809 15.8612 196.869 16.1396 196.09C16.4213 195.308 16.8256 194.711 17.3526 194.3C17.8829 193.886 18.5193 193.679 19.2617 193.679C20.0041 193.679 20.6388 193.886 21.1658 194.3C21.6961 194.711 22.1005 195.308 22.3789 196.09C22.6606 196.869 22.8015 197.809 22.8015 198.909C22.8015 200.016 22.6623 200.961 22.3839 201.743C22.1055 202.522 21.7028 203.117 21.1758 203.528C20.6488 203.935 20.0108 204.139 19.2617 204.139ZM19.2617 203.045C20.0041 203.045 20.5808 202.687 20.9918 201.972C21.4028 201.256 21.6083 200.235 21.6083 198.909C21.6083 198.027 21.5138 197.277 21.3249 196.657C21.1393 196.037 20.8709 195.565 20.5195 195.24C20.1715 194.915 19.7522 194.753 19.2617 194.753C18.5259 194.753 17.9509 195.116 17.5366 195.842C17.1223 196.564 16.9151 197.587 16.9151 198.909C16.9151 199.791 17.0079 200.54 17.1935 201.156C17.3791 201.773 17.646 202.242 17.994 202.563C18.3453 202.885 18.7679 203.045 19.2617 203.045ZM24.6907 204V203.105L28.0515 199.426C28.4459 198.995 28.7707 198.621 29.0259 198.303C29.2811 197.981 29.4701 197.679 29.5927 197.398C29.7186 197.113 29.7816 196.814 29.7816 196.503C29.7816 196.145 29.6954 195.835 29.5231 195.573C29.354 195.311 29.122 195.109 28.8271 194.967C28.5321 194.824 28.2006 194.753 27.8327 194.753C27.4416 194.753 27.1003 194.834 26.8086 194.996C26.5202 195.156 26.2965 195.379 26.1374 195.668C25.9817 195.956 25.9038 196.294 25.9038 196.682H24.7305C24.7305 196.085 24.868 195.562 25.1431 195.111C25.4182 194.66 25.7927 194.309 26.2667 194.057C26.744 193.805 27.2792 193.679 27.8725 193.679C28.4691 193.679 28.9978 193.805 29.4585 194.057C29.9192 194.309 30.2804 194.648 30.5423 195.076C30.8041 195.504 30.935 195.979 30.935 196.503C30.935 196.877 30.8671 197.244 30.7312 197.602C30.5986 197.956 30.3666 198.352 30.0352 198.79C29.707 199.224 29.2513 199.754 28.668 200.381L26.381 202.827V202.906H31.114V204H24.6907ZM33.1673 204V203.105L36.5281 199.426C36.9225 198.995 37.2473 198.621 37.5025 198.303C37.7577 197.981 37.9466 197.679 38.0692 197.398C38.1952 197.113 38.2582 196.814 38.2582 196.503C38.2582 196.145 38.172 195.835 37.9996 195.573C37.8306 195.311 37.5986 195.109 37.3036 194.967C37.0086 194.824 36.6772 194.753 36.3093 194.753C35.9182 194.753 35.5768 194.834 35.2852 194.996C34.9968 195.156 34.7731 195.379 34.614 195.668C34.4582 195.956 34.3803 196.294 34.3803 196.682H33.207C33.207 196.085 33.3446 195.562 33.6197 195.111C33.8948 194.66 34.2693 194.309 34.7433 194.057C35.2205 193.805 35.7558 193.679 36.3491 193.679C36.9457 193.679 37.4743 193.805 37.935 194.057C38.3957 194.309 38.757 194.648 39.0188 195.076C39.2807 195.504 39.4116 195.979 39.4116 196.503C39.4116 196.877 39.3436 197.244 39.2077 197.602C39.0752 197.956 38.8432 198.352 38.5117 198.79C38.1836 199.224 37.7279 199.754 37.1445 200.381L34.8576 202.827V202.906H39.5906V204H33.1673Z" fill="#8388A0"/>
    <path d="M326.802 193.818V204H325.609L320.06 196.006H319.961V204H318.728V193.818H319.921L325.489 201.832H325.589V193.818H326.802ZM332.212 204.159C331.523 204.159 330.918 203.995 330.398 203.667C329.881 203.339 329.476 202.88 329.185 202.29C328.896 201.7 328.752 201.01 328.752 200.222C328.752 199.426 328.896 198.732 329.185 198.138C329.476 197.545 329.881 197.085 330.398 196.756C330.918 196.428 331.523 196.264 332.212 196.264C332.902 196.264 333.505 196.428 334.022 196.756C334.542 197.085 334.947 197.545 335.235 198.138C335.527 198.732 335.672 199.426 335.672 200.222C335.672 201.01 335.527 201.7 335.235 202.29C334.947 202.88 334.542 203.339 334.022 203.667C333.505 203.995 332.902 204.159 332.212 204.159ZM332.212 203.105C332.736 203.105 333.167 202.971 333.505 202.702C333.843 202.434 334.093 202.081 334.256 201.643C334.418 201.206 334.499 200.732 334.499 200.222C334.499 199.711 334.418 199.236 334.256 198.795C334.093 198.354 333.843 197.998 333.505 197.726C333.167 197.454 332.736 197.318 332.212 197.318C331.689 197.318 331.258 197.454 330.92 197.726C330.582 197.998 330.331 198.354 330.169 198.795C330.007 199.236 329.925 199.711 329.925 200.222C329.925 200.732 330.007 201.206 330.169 201.643C330.331 202.081 330.582 202.434 330.92 202.702C331.258 202.971 331.689 203.105 332.212 203.105ZM338.934 204L336.607 196.364H337.84L339.491 202.21H339.57L341.201 196.364H342.454L344.065 202.19H344.144L345.795 196.364H347.028L344.701 204H343.547L341.877 198.134H341.758L340.087 204H338.934Z" fill="#8388A0"/>
    <defs>
    <linearGradient id="paint0_linear_2184_2168" x1="177" y1="41" x2="177" y2="179.996" gradientUnits="userSpaceOnUse">
    <stop stop-color="#2A7FFF"/>
    <stop offset="1" stop-color="#2A7FFF" stop-opacity="0"/>
    </linearGradient>
    </defs>
    </svg>
    <h2>Write to us and let's start working</h2>

<p>
  Write to us on our social networks and we will start working right now
</p>
    </div>
    <div class="actions">
      <a>Instagram</a> 
      <a>Facebook</a>
    </div>
  </section>
  <section>
    <h2>Customer reviews</h2>
    <div class="reviews">
      ${this.renderVariants(reviews)}
    </div>
    <div class="actions">
      <a>Instagram</a> 
      <a>Facebook</a>
    </div>
  </section>
  <div class="gradient">
    <h2>10 000+</h2>
    <p>users started their weight loss<br> journey with us</p>
    <div>
      5 546+ 5-star ratings from <br> happy users😍
    </div>
  </div>
  <div class="disclamer">
    <ul>
      <li>You will only be charged €17.99 today for your first month (details below)</li>
      <li>You may cancel at any time before Mar 11, 2024, 9:54 PM, and you will not be charged.</li>
      <li>Your introductory period will last until Mar 11, 2024, 9:54 PM.</li>
      <li>If you don't cancel, Simple will automatically continue your membership at the end of your introductory period and charge the membership fee (currently €29.99 EUR) monthly until you cancel.</li>
      <li>No partial refunds. You can cancel your subscription anytime on your Subscription Management page.</li>
      <li>Your subscription will be bound by our <a>Terms</a> and <a>Privacy Policy</a></li>
    </ul>  
  </div>
</div>`;
  }
}

export class InputStrategy extends StrategyBuilder {
  constructor(eventManager) {
    super(eventManager);
    this.name = "input";
  }
  render(data, context) {
    const renderContext = document.querySelector(".step");
    const { question_text, description } = data;

    renderContext.innerHTML = `
        ${this.renderTitle(question_text)} 
        ${this.renderSubtitle(description)}
        <div class="actions actions--vertical">
          <div class="input-wrapper">
          <label>Your height</label>
            
          
          <input
          autocomplete="off"
          class="input-wrapper__input"
          required
          />
          <div class="input-wrapper__note">cm</div>
          </div>
        </div>
    `;
    this.eventManager.initListeners(context);
  }
}

export class GradeStrategy extends StrategyBuilder {
  constructor(eventManager) {
    super(eventManager);
    this.name = "grade";
  }
  renderVariants(variantsToJson) {
    return variantsToJson
      .map((variant) => {
        return `
          <button
              class="button select single vertical"
              id="variant-${variant.id}"
              data-id=${variant.id}
          >
          <span>${variant.title}</span>
          </button>
          `;
      })
      .join("");
  }
  render(data) {
    const context = document.querySelector(".step");
    const { description, question_text, variants } = data;
    const variantsToJson = JSON.parse(variants);
    context.innerHTML = `
        ${this.renderTitle(question_text)} 
        ${this.renderSubtitle(description)}
        <div class="actions actions--horizontal">
          ${this.renderVariants(variantsToJson)}
          <div class="step__details">
            <div>Not at all</div>
            <div>Totally</div>
          </div>
        </div>
    `;
    this.eventManager.initListeners();
  }
}

export class StrategyManager {
  constructor() {
    this.strategies = [
      new SingleStrategy(
        new SingleSelect({
          qs: qs,
        })
      ),
      new MultiStrategy(
        new MultiSelect({
          qs: qs,
        })
      ),
      new HTMLStrategy(
        new HTML({
          qs: qs,
        })
      ),
      new InputStrategy(
        new Input({
          qs: qs,
        })
      ),
      new GradeStrategy(
        new SingleSelect({
          qs: qs,
        })
      ),
      new FinalScreenStrategy({}),
    ];
  }

  getStrategy(name) {
    return this.strategies.find((str) => str.name === name);
  }
}
